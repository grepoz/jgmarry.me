{"ast":null,"code":"import { initializeApp, deleteApp } from \"firebase/app\";\nimport { getDatabase, ref, child, get, update } from \"firebase/database\";\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { StatusCodes } from \"http-status-codes\";\nexport function openFirebaseConnection() {\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n  };\n  const app = initializeApp(firebaseConfig);\n  return app;\n}\nexport function closeConnectionToDb(firebaseApp) {\n  deleteApp(firebaseApp).then(function () {\n    console.log(\"App deleted successfully\");\n  }).catch(function (error) {\n    console.log(\"Error deleting app:\", error);\n  });\n}\nexport async function getFamily(password) {\n  const firebaseApp = openFirebaseConnection();\n\n  //createUserAuth(firebaseApp, \"\", \"\");\n  loginUser(firebaseApp, \"\", \"\");\n  const dbRef = ref(getDatabase());\n  return await get(child(dbRef, \"families\")).then(snapshot => {\n    if (snapshot.exists()) {\n      let families = snapshot.val();\n      for (let index = 0; index < families.length; index++) {\n        const family = families[index];\n        if (family.password === password) {\n          //authenticate();\n          return family;\n        }\n      }\n      return StatusCodes.NOT_FOUND;\n    } else {\n      console.log(\"No data available\");\n      return StatusCodes.BAD_REQUEST;\n    }\n  }).catch(error => {\n    console.error(error);\n    return StatusCodes.SERVICE_UNAVAILABLE;\n  }).finally(() => {\n    closeConnectionToDb(firebaseApp);\n  });\n}\nexport async function updateFamily(family) {\n  const firebaseApp = openFirebaseConnection();\n  // const authenticationResult = authenticate(firebaseApp);\n\n  // if (authenticationResult === StatusCodes.INTERNAL_SERVER_ERROR) {\n  //     return StatusCodes.SERVICE_UNAVAILABLE;\n  // }\n\n  const dbRef = ref(getDatabase());\n  const updates = {};\n  updates[`/families/${family.id}`] = family;\n  return await update(dbRef, updates).then(() => {\n    return StatusCodes.OK;\n  }).catch(() => {\n    console.error(\"error\");\n    return StatusCodes.SERVICE_UNAVAILABLE;\n  }).finally(() => {\n    closeConnectionToDb(firebaseApp);\n  });\n}\nfunction createUserAuth(app, email, password) {\n  const auth = getAuth(app);\n  createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n    // Signed in \n    const user = userCredential.user;\n    console.log(\"success!\");\n  }).catch(error => {\n    console.log(\"fail!\");\n  });\n}\nfunction loginUser(app, email, password) {\n  const auth = getAuth(app);\n  signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n    // Signed in \n    const user = userCredential.user;\n    console.log(\"success!\");\n  }).catch(error => {\n    console.log(\"fail!\");\n  });\n}","map":{"version":3,"names":["initializeApp","deleteApp","getDatabase","ref","child","get","update","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","StatusCodes","openFirebaseConnection","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","closeConnectionToDb","firebaseApp","then","console","log","catch","error","getFamily","password","loginUser","dbRef","snapshot","exists","families","val","index","length","family","NOT_FOUND","BAD_REQUEST","SERVICE_UNAVAILABLE","finally","updateFamily","updates","id","OK","createUserAuth","email","auth","userCredential","user"],"sources":["C:/Users/marci/source/repos/jgmarry.me/src/backend/database-helper/databaseUtils.js"],"sourcesContent":["import { initializeApp, deleteApp } from \"firebase/app\";\r\nimport { getDatabase, ref, child, get, update } from \"firebase/database\";\r\nimport { getAuth, createUserWithEmailAndPassword , signInWithEmailAndPassword, signOut } from \"firebase/auth\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\n\r\nexport function openFirebaseConnection() {\r\n\r\n    const firebaseConfig = {\r\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n        authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n        databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n        storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n        messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n        appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n    }\r\n\r\n    const app = initializeApp(firebaseConfig);\r\n\r\n    return app;\r\n}\r\n\r\nexport function closeConnectionToDb(firebaseApp) {\r\n    deleteApp(firebaseApp)\r\n        .then(function () {\r\n            console.log(\"App deleted successfully\");\r\n        })\r\n        .catch(function (error) {\r\n            console.log(\"Error deleting app:\", error);\r\n        });\r\n}\r\n\r\nexport async function getFamily(password) {\r\n\r\n    const firebaseApp = openFirebaseConnection();\r\n\r\n    //createUserAuth(firebaseApp, \"\", \"\");\r\n    loginUser(firebaseApp, \"\", \"\");\r\n    const dbRef = ref(getDatabase());\r\n\r\n    return await get(child(dbRef, \"families\"))\r\n        .then((snapshot) => {\r\n            if (snapshot.exists()) {\r\n                let families = snapshot.val();\r\n\r\n                for (let index = 0; index < families.length; index++) {\r\n                    const family = families[index];\r\n\r\n                    if (family.password === password) {\r\n                        //authenticate();\r\n                        return family;\r\n                    }\r\n                }\r\n\r\n                return StatusCodes.NOT_FOUND;\r\n            }\r\n            else {\r\n                console.log(\"No data available\");\r\n                return StatusCodes.BAD_REQUEST;\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n            return StatusCodes.SERVICE_UNAVAILABLE;\r\n        })\r\n        .finally(() => {\r\n            closeConnectionToDb(firebaseApp)\r\n        });\r\n}\r\n\r\nexport async function updateFamily(family) {\r\n\r\n    const firebaseApp = openFirebaseConnection();\r\n    // const authenticationResult = authenticate(firebaseApp);\r\n\r\n    // if (authenticationResult === StatusCodes.INTERNAL_SERVER_ERROR) {\r\n    //     return StatusCodes.SERVICE_UNAVAILABLE;\r\n    // }\r\n\r\n    const dbRef = ref(getDatabase());\r\n    const updates = {};\r\n    updates[`/families/${family.id}`] = family;\r\n\r\n    return await update(dbRef, updates)\r\n        .then(() => { return StatusCodes.OK; })\r\n        .catch(() => {\r\n            console.error(\"error\");\r\n            return StatusCodes.SERVICE_UNAVAILABLE;\r\n        })\r\n        .finally(() => {\r\n            closeConnectionToDb(firebaseApp)\r\n        });\r\n}\r\n\r\nfunction createUserAuth(app, email, password){\r\n    const auth = getAuth(app);\r\n    createUserWithEmailAndPassword (auth, email, password)\r\n    .then((userCredential) => {\r\n        // Signed in \r\n        const user = userCredential.user;\r\n        console.log(\"success!\");\r\n    })\r\n    .catch((error) => {\r\n        console.log(\"fail!\");\r\n    });\r\n}\r\n\r\nfunction loginUser(app, email, password){\r\n    const auth = getAuth(app);\r\n    signInWithEmailAndPassword(auth, email, password)\r\n    .then((userCredential) => {\r\n        // Signed in \r\n        const user = userCredential.user;\r\n        console.log(\"success!\");\r\n    })\r\n    .catch((error) => {\r\n        console.log(\"fail!\");\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}