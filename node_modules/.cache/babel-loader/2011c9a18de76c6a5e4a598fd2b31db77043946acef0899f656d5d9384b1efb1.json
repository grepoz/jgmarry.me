{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marci\\\\source\\\\repos\\\\jgmarry.me\\\\src\\\\components\\\\Countdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../styles/countdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0\n  });\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const targetDate = new Date('2023-09-09T15:00:00');\n      const currentDate = new Date();\n      const difference = targetDate - currentDate;\n      if (difference > 0) {\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        const hours = Math.floor(difference / (1000 * 60 * 60) % 24);\n        const minutes = Math.floor(difference / (1000 * 60) % 60);\n        return {\n          days,\n          hours,\n          minutes\n        };\n      } else {\n        return {\n          days: 0,\n          hours: 0,\n          minutes: 0\n        };\n      }\n    };\n    const updateTimer = () => {\n      setTimeLeft(calculateTimeLeft());\n    };\n    updateTimer();\n    const timer = setInterval(updateTimer, 1000 * 60); // Update every minute\n\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cd-section\",\n    id: \"countdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"section-subtitle timer-subtitle\",\n      children: \"Widzimy si\\u0119 za\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: [timeLeft.days, \" dni \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"normal\"\n        },\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }, this), \"\\xA0\", timeLeft.hours, ' ', \" godz \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"normal\"\n        },\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 36\n      }, this), \"\\xA0\", timeLeft.minutes, \" min\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"GFcOnOc6LfB3sZOFcvLNgwHjzVw=\");\n_c = Countdown;\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","Countdown","timeLeft","setTimeLeft","days","hours","minutes","calculateTimeLeft","targetDate","Date","currentDate","difference","Math","floor","updateTimer","timer","setInterval","clearInterval","fontWeight"],"sources":["C:/Users/marci/source/repos/jgmarry.me/src/components/Countdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"../styles/countdown.css\";\r\n\r\nconst Countdown = () => {\r\n  const [timeLeft, setTimeLeft] = useState({ days: 0, hours: 0, minutes: 0 });\r\n\r\n  useEffect(() => {\r\n    const calculateTimeLeft = () => {\r\n      const targetDate = new Date('2023-09-09T15:00:00');\r\n      const currentDate = new Date();\r\n      const difference = targetDate - currentDate;\r\n\r\n      if (difference > 0) {\r\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((difference / (1000 * 60 * 60)) % 24);\r\n        const minutes = Math.floor((difference / (1000 * 60)) % 60);\r\n\r\n        return { days, hours, minutes };\r\n      } else {\r\n        return { days: 0, hours: 0, minutes: 0 };\r\n      }\r\n    };\r\n\r\n    const updateTimer = () => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    };\r\n\r\n    updateTimer();\r\n    const timer = setInterval(updateTimer, 1000 * 60); // Update every minute\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"cd-section\" id=\"countdown\">\r\n\t\t\t<span className=\"section-subtitle timer-subtitle\">Widzimy siÄ™ za</span>\r\n\t\t\t<h2 className=\"section-title\">\r\n        {timeLeft.days} dni <span style={{fontWeight: \"normal\"}}>|</span>&nbsp;\r\n        {timeLeft.hours}{' '} godz <span style={{fontWeight: \"normal\"}}>|</span>&nbsp;\r\n        {timeLeft.minutes} min\r\n      </h2>\r\n\t</section>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,yBAAyB;AAAC;AAEjC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IAAEK,IAAI,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EAE3EN,SAAS,CAAC,MAAM;IACd,MAAMO,iBAAiB,GAAG,MAAM;MAC9B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC,qBAAqB,CAAC;MAClD,MAAMC,WAAW,GAAG,IAAID,IAAI,EAAE;MAC9B,MAAME,UAAU,GAAGH,UAAU,GAAGE,WAAW;MAE3C,IAAIC,UAAU,GAAG,CAAC,EAAE;QAClB,MAAMP,IAAI,GAAGQ,IAAI,CAACC,KAAK,CAACF,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC3D,MAAMN,KAAK,GAAGO,IAAI,CAACC,KAAK,CAAEF,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;QAC9D,MAAML,OAAO,GAAGM,IAAI,CAACC,KAAK,CAAEF,UAAU,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;QAE3D,OAAO;UAAEP,IAAI;UAAEC,KAAK;UAAEC;QAAQ,CAAC;MACjC,CAAC,MAAM;QACL,OAAO;UAAEF,IAAI,EAAE,CAAC;UAAEC,KAAK,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAE,CAAC;MAC1C;IACF,CAAC;IAED,MAAMQ,WAAW,GAAG,MAAM;MACxBX,WAAW,CAACI,iBAAiB,EAAE,CAAC;IAClC,CAAC;IAEDO,WAAW,EAAE;IACb,MAAMC,KAAK,GAAGC,WAAW,CAACF,WAAW,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;;IAEnD,OAAO,MAAMG,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAS,SAAS,EAAC,YAAY;IAAC,EAAE,EAAC,WAAW;IAAA,wBAC/C;MAAM,SAAS,EAAC,iCAAiC;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAO,eACvE;MAAI,SAAS,EAAC,eAAe;MAAA,WACvBb,QAAQ,CAACE,IAAI,EAAC,OAAK;QAAM,KAAK,EAAE;UAACc,UAAU,EAAE;QAAQ,CAAE;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO,QACjE,EAAChB,QAAQ,CAACG,KAAK,EAAE,GAAG,EAAC,QAAM;QAAM,KAAK,EAAE;UAACa,UAAU,EAAE;QAAQ,CAAE;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO,QACxE,EAAChB,QAAQ,CAACI,OAAO,EAAC,MACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEX,CAAC;AAAC,GAxCIL,SAAS;AAAA,KAATA,SAAS;AA0Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}