{"ast":null,"code":"'use strict';\n\nexports.sanitize = function (str) {\n  return str.replace(/[^a-zA-Z0-9]/g, '');\n};\nexports.sanitize.keepUnicode = function (str) {\n  return str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n};\nexports.sanitize.keepSpace = function (str) {\n  var str2 = str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n  return str2.replace(/ /g, ' ');\n};\nexports.sanitize.addFullstop = function (str) {\n  var str2 = str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n  return str2.replace(/ /g, '.');\n};\nexports.sanitize.addUnderscore = function (str) {\n  var str2 = str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n  return str2.replace(/ /g, '_');\n};\nexports.sanitize.addDash = function (str) {\n  var str2 = str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n  return str2.replace(/ /g, '-');\n};\nexports.sanitize.removeNumber = function (str) {\n  return str.replace(/[^a-zA-Z]/g, '');\n};\nexports.sanitize.removeText = function (str) {\n  return str.replace(/[^0-9]/g, '');\n};\nexports.sanitize.keepNumber = function (str) {\n  return str.replace(/[^a-zA-Z0-9]/g, '');\n};\nexports.addFullstop = function (str) {\n  return str.replace(/ /g, '.');\n};\nexports.addUnderscore = function (str) {\n  return str.replace(/ /g, '_');\n};\nexports.addDash = function (str) {\n  return str.replace(/ /g, '-');\n};\n\n// Remove Space without sanitizing\nexports.removeSpace = function (str) {\n  return str.replace(/\\s+/g, '');\n};\nexports.removeUnderscore = function (str) {\n  return str.replace(/_+/g, '');\n};\nexports.validate = function (str) {\n  console.log(\"Use validate.isEmail or validate.isUsername for further validation\");\n  return 'Use validate.isEmail or validate.isUsername for further validation';\n};\n\n//Username & Email\nexports.validate.isEmail = function (str) {\n  var regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (regex.test(str)) {\n    return str;\n  } else {\n    return false;\n  }\n};\nexports.validate.isUsername = function (str) {\n  var regex = /^[a-z][a-z]+\\d*$|^[a-z]\\d{2,}$/i;\n  if (regex.test(str)) {\n    return str.toLowerCase();\n  } else {\n    return false;\n  }\n};\n\n// To check a password between 6 to 15 characters which contain at least one numeric digit and a special character\nexports.validate.isPassword6to15 = function (str) {\n  var regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,15}$/;\n  if (regex.test(str)) {\n    return str;\n  } else {\n    return false;\n  }\n};\n\n// 7 to 20 characters which contain only characters, numeric digits, underscore and first character must be a letter\nexports.validate.isPassword7to20 = function (str) {\n  var regex = /^[A-Za-z]\\w{7,20}$/;\n  if (regex.test(str)) {\n    return str;\n  } else {\n    return false;\n  }\n};\n\n// 6 to 20 characters which contain at least one numeric digit, one uppercase and one lowercase letter\nexports.validate.isPassword6to20 = function (str) {\n  var regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n  if (regex.test(str)) {\n    return str;\n  } else {\n    return false;\n  }\n};\n\n// To check a password between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\nexports.validate.isPassword8to15 = function (str) {\n  var regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\n  if (regex.test(str)) {\n    return str;\n  } else {\n    return false;\n  }\n};","map":{"version":3,"names":["exports","sanitize","str","replace","keepUnicode","keepSpace","str2","addFullstop","addUnderscore","addDash","removeNumber","removeText","keepNumber","removeSpace","removeUnderscore","validate","console","log","isEmail","regex","test","isUsername","toLowerCase","isPassword6to15","isPassword7to20","isPassword6to20","isPassword8to15"],"sources":["C:/Users/marci/source/repos/jgmarry.me/node_modules/string-sanitizer/index.js"],"sourcesContent":["'use strict';\r\n\r\nexports.sanitize = function (str) {\r\n  return str.replace(/[^a-zA-Z0-9]/g, '');\r\n};\r\n\r\nexports.sanitize.keepUnicode = function (str) {\r\n  return str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n};\r\n\r\nexports.sanitize.keepSpace = function (str) {\r\n  var str2 = str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n  return str2.replace(/ /g, ' ');\r\n};\r\n\r\nexports.sanitize.addFullstop = function (str) {\r\n  var str2 = str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n  return str2.replace(/ /g, '.');\r\n};\r\n\r\nexports.sanitize.addUnderscore = function (str) {\r\n  var str2 = str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n  return str2.replace(/ /g, '_');\r\n};\r\n\r\nexports.sanitize.addDash = function (str) {\r\n  var str2 = str.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n  return str2.replace(/ /g, '-');\r\n};\r\n\r\nexports.sanitize.removeNumber = function (str) {\r\n  return str.replace(/[^a-zA-Z]/g, '');\r\n};\r\n\r\nexports.sanitize.removeText = function (str) {\r\n  return str.replace(/[^0-9]/g, '');\r\n};\r\n\r\nexports.sanitize.keepNumber = function (str) {\r\n  return str.replace(/[^a-zA-Z0-9]/g, '');\r\n};\r\n\r\nexports.addFullstop = function (str) {\r\n  return str.replace(/ /g, '.');\r\n};\r\nexports.addUnderscore = function (str) {\r\n  return str.replace(/ /g, '_');\r\n};\r\n\r\nexports.addDash = function (str) {\r\n  return str.replace(/ /g, '-');\r\n};\r\n\r\n// Remove Space without sanitizing\r\nexports.removeSpace = function (str) {\r\n  return str.replace(/\\s+/g, '');\r\n};\r\n\r\nexports.removeUnderscore = function (str) {\r\n  return str.replace(/_+/g, '');\r\n};\r\n\r\nexports.validate = function (str) {\r\n  console.log(\r\n    `Use validate.isEmail or validate.isUsername for further validation`\r\n  );\r\n  return 'Use validate.isEmail or validate.isUsername for further validation';\r\n};\r\n\r\n//Username & Email\r\nexports.validate.isEmail = function (str) {\r\n  const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  if (regex.test(str)) {\r\n    return str;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexports.validate.isUsername = function (str) {\r\n  const regex = /^[a-z][a-z]+\\d*$|^[a-z]\\d{2,}$/i;\r\n  if (regex.test(str)) {\r\n    return str.toLowerCase();\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// To check a password between 6 to 15 characters which contain at least one numeric digit and a special character\r\nexports.validate.isPassword6to15 = function (str) {\r\n  const regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,15}$/;\r\n  if (regex.test(str)) {\r\n    return str;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// 7 to 20 characters which contain only characters, numeric digits, underscore and first character must be a letter\r\nexports.validate.isPassword7to20 = function (str) {\r\n  const regex = /^[A-Za-z]\\w{7,20}$/;\r\n  if (regex.test(str)) {\r\n    return str;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// 6 to 20 characters which contain at least one numeric digit, one uppercase and one lowercase letter\r\nexports.validate.isPassword6to20 = function (str) {\r\n  const regex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\r\n  if (regex.test(str)) {\r\n    return str;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// To check a password between 8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\r\nexports.validate.isPassword8to15 = function (str) {\r\n  const regex =\r\n    /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\r\n  if (regex.test(str)) {\r\n    return str;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}