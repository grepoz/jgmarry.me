{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marci\\\\source\\\\repos\\\\jgmarry.me\\\\src\\\\pages\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getFamily } from \"../backend/database-helper/databaseUtils\";\nimport { StatusCodes } from 'http-status-codes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  let sanitizer = require(\"string-sanitizer\");\n  const PASSWORD_LENGTH = 6;\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsDisabled(true);\n    let password = document.getElementById(\"registerPassword\").value;\n    if (password.length !== PASSWORD_LENGTH) {\n      setErrorMessage(\"hasło ma dokładnie 6 znaków.\");\n      setIsDisabled(false);\n      return;\n    }\n    let sanitized_password = sanitizer.sanitize.keepNumber(password);\n    let family = await getFamily(sanitized_password);\n    if (family === StatusCodes.NOT_FOUND) {\n      setErrorMessage(\"nie znaleziono rodziny dla podanego hasła.\");\n      setIsDisabled(false);\n      return;\n    }\n    if (family === StatusCodes.BAD_REQUEST || family === StatusCodes.SERVICE_UNAVAILABLE) {\n      // jeśli dwie rodziny mają to samo hasło - wywala\n      setErrorMessage(\"przepraszamy, wystąpił błąd serwera.\");\n      setIsDisabled(false);\n      return;\n    }\n    setErrorMessage(\"\");\n    setIsDisabled(false);\n    let state = {\n      family: family\n    };\n    navigate(\"/signupFamily\", {\n      state\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"HBDIV61X9Gmfl2v2U/QdlwDHZks=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\n;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","getFamily","StatusCodes","Register","sanitizer","require","PASSWORD_LENGTH","isDisabled","setIsDisabled","errorMessage","setErrorMessage","navigate","handleSubmit","event","preventDefault","password","document","getElementById","value","length","sanitized_password","sanitize","keepNumber","family","NOT_FOUND","BAD_REQUEST","SERVICE_UNAVAILABLE","state"],"sources":["C:/Users/marci/source/repos/jgmarry.me/src/pages/register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getFamily } from \"../backend/database-helper/databaseUtils\";\r\nimport { StatusCodes } from 'http-status-codes';\r\n\r\nexport default function Register() {\r\n\r\n    let sanitizer = require(\"string-sanitizer\");\r\n    const PASSWORD_LENGTH = 6;\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsDisabled(true);\r\n        let password = document.getElementById(\"registerPassword\").value;\r\n\r\n        if (password.length !== PASSWORD_LENGTH) {\r\n            setErrorMessage(\"hasło ma dokładnie 6 znaków.\");\r\n            setIsDisabled(false);\r\n            return;\r\n        }\r\n\r\n        let sanitized_password = sanitizer.sanitize.keepNumber(password);\r\n\r\n        let family = await getFamily(sanitized_password);\r\n\r\n        if (family === StatusCodes.NOT_FOUND) {\r\n            setErrorMessage(\"nie znaleziono rodziny dla podanego hasła.\");\r\n            setIsDisabled(false);\r\n            return;\r\n        }\r\n\r\n        if (family === StatusCodes.BAD_REQUEST || family === StatusCodes.SERVICE_UNAVAILABLE) {\r\n            // jeśli dwie rodziny mają to samo hasło - wywala\r\n            setErrorMessage(\"przepraszamy, wystąpił błąd serwera.\");\r\n            setIsDisabled(false);\r\n            return;\r\n        }\r\n\r\n        setErrorMessage(\"\");\r\n        setIsDisabled(false);\r\n\r\n        let state = { family: family };\r\n        navigate(\"/signupFamily\", { state });\r\n    }\r\n    return (\r\n        <div>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,0CAA0C;AACpE,SAASC,WAAW,QAAQ,mBAAmB;AAAC;AAEhD,eAAe,SAASC,QAAQ,GAAG;EAAA;EAE/B,IAAIC,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;EAC3C,MAAMC,eAAe,GAAG,CAAC;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAE9B,eAAeY,YAAY,CAACC,KAAK,EAAE;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtBN,aAAa,CAAC,IAAI,CAAC;IACnB,IAAIO,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACC,KAAK;IAEhE,IAAIH,QAAQ,CAACI,MAAM,KAAKb,eAAe,EAAE;MACrCI,eAAe,CAAC,8BAA8B,CAAC;MAC/CF,aAAa,CAAC,KAAK,CAAC;MACpB;IACJ;IAEA,IAAIY,kBAAkB,GAAGhB,SAAS,CAACiB,QAAQ,CAACC,UAAU,CAACP,QAAQ,CAAC;IAEhE,IAAIQ,MAAM,GAAG,MAAMtB,SAAS,CAACmB,kBAAkB,CAAC;IAEhD,IAAIG,MAAM,KAAKrB,WAAW,CAACsB,SAAS,EAAE;MAClCd,eAAe,CAAC,4CAA4C,CAAC;MAC7DF,aAAa,CAAC,KAAK,CAAC;MACpB;IACJ;IAEA,IAAIe,MAAM,KAAKrB,WAAW,CAACuB,WAAW,IAAIF,MAAM,KAAKrB,WAAW,CAACwB,mBAAmB,EAAE;MAClF;MACAhB,eAAe,CAAC,sCAAsC,CAAC;MACvDF,aAAa,CAAC,KAAK,CAAC;MACpB;IACJ;IAEAE,eAAe,CAAC,EAAE,CAAC;IACnBF,aAAa,CAAC,KAAK,CAAC;IAEpB,IAAImB,KAAK,GAAG;MAAEJ,MAAM,EAAEA;IAAO,CAAC;IAC9BZ,QAAQ,CAAC,eAAe,EAAE;MAAEgB;IAAM,CAAC,CAAC;EACxC;EACA,oBACI;IAAA;IAAA;IAAA;EAAA,QACM;AAEd;AAAC,GA/CuBxB,QAAQ;EAAA,QAMXH,WAAW;AAAA;AAAA,KANRG,QAAQ;AA+C/B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}